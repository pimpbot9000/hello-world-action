name: "Hello World"
description: "Greet someone"
inputs:
  who-to-greet: # id of input
    description: "Who to greet"
    required: true
    default: "World"
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
  test-output:
    description: "Test output"
    value: ${{ steps.test-output-generator.outputs.test-output}}
  test-output2:
    description: "Test output 2"
    value: ${{ steps.run-goodbye-script.outputs.test-output2}}
runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash

    - id: random-number-generator
      run: echo "::set-output name=random-number::$(echo $RANDOM)"
      shell: bash
    #    - run: echo "${{ github.action_path }}"
    #      shell: bash
    #    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    #      shell: bash
    - id: run-goodbye-script
      run: |
        FOO_VALUE=$(${{ github.action_path }}/goodbye.sh)
        echo "FOO=$FOO_VALUE" >> $GITHUB_ENV
        echo "::set-output name=test-output2::$(echo $FOO_VALUE)"
      shell: bash

    - id: test-output-generator
      run: echo "::set-output name=test-output::$(echo ${{ env.FOO }})"
      shell: bash

       
    - name: Echo output from previous step
      run: echo ${{ steps.run-goodbye-script.outputs.test-output2 }}
      shell: bash
      
    - name: Echo github variables
      run: echo ${{ github.event.ref }} ${{ github.repository }} ${{Â github.event.repository.html_url }}      
      shell: bash
      
    - name: Echo url
      run: echo ${{ github.event.repository.html_url }}/tree/${{ github.event.ref }}
      shell: bash
    
    - name: Test env from parent action
      run: echo $MY_ENV
      shell: bash
    
    - run: echo ${{ github.ref }}
      shell: bash
    
    - run: echo ${{ format('Hello {0} {1} {2}', 'Mona', env.MY_ENV, 'Octocat') }}
      shell: bash
    
    - run: echo $FOOFOO
      shell: bash
    - run: |
        inputs='${{ toJSON(inputs) }}'
        echo $inputs
        result=( $(echo $inputs | jq -r . | keys[]) )
        echo result
      shell: bash